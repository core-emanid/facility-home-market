---
import Btn from "../components/cta-button.astro";
---

<section class="flex flex-col lg:flex-row max-[375px]:px-4 text-neutral align-center justify-center p-8 bg-base-100 " id="about" >

    <div class="flex flex-col justify-between">

        <div class="flex flex-col items-center p-2 lg:p-4 text-pretty">
            <h2 id="title-hook" class="font-extrabold text-4xl lg:text-5xl text-center max-lg:pt-12 max-lg:bg-base-100">Um ano de impacto positivo <br>na vida das pessoas</h2>
           
            <div class="flex flex-col justify-center align-center items-center lg:flex-row p-4 w-[80%]" id="facilityInNumbers">
                
                <div class="px-8 py-16 m-2 space-y-8" >
                    <h3 class="text-center self-center font-extrabold text-8xl text-accent">
                        <span>0</span>
                    </h3>
                    <p class="text-center text-lg lg:text-md">Unidades em funcionamento</p>
                </div>

                <div class="px-8 py-16 m-3 space-y-8 w-fit">
                    <h3 class="text-center self-center font-extrabold text-8xl text-accent">
                        <span>0</span>    
                    </h3>
                    <p class="text-center text-lg lg:text-md text-nowrap">Toneladas de CO2 <br>não foram emitidas</p>
                </div>

                <div class="px-8 py-16 m-2 space-y-8">
                    <h3 class="text-center self-center font-extrabold text-8xl text-accent">
                        <span>0</span>k
                    </h3>
                    <p class="text-center text-lg lg:text-md text-nowrap">Compras realizadas <br>em um ano</p>
                </div>

            </div>

        </div>

    </div>

    <div class="flex flex-col items-center text-left lg:w-[30%]">
        <div class="flex flex-col items-center lg:w-[85%]">
            <h2 class="w-full lg:px-2 py-2 font-extrabold text-5xl leading-normal text-nowrap text-center">Mercado <br> autônomo</h2>
            <p class="text-lg py-6 px-2 text-justify lg:mx-2 lg:w-[80%] leading-6">
                Como o próprio nome sugere, no mercado autônomo o cliente 
                realiza todas as etapas da compra sem precisar de funcionários, ou seja, 
                um mercado em casa <strong>disponível 24 horas</strong> por dia!
            </p>
            <Btn bgColor="#72ad49" textColor="#FFF" />
        </div>
    </div>

</section>

<script>

    let isAnimationLoaded = false;
    
    window.addEventListener("scroll", function() {
        const element = document.getElementById("facilityInNumbers");
        const titleElement = document.getElementById("title-hook");
        
        if (titleElement && !isAnimationLoaded) {
            const rect = titleElement.getBoundingClientRect();
            const isInViewport = (
                rect.top >= 0 &&
                rect.left >= 0 &&
                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
                rect.right <= (window.innerWidth || document.documentElement.clientWidth)
            );

            if (isInViewport) {
                
                let spans = element.getElementsByTagName("span");
                
                
                animateValue(spans[0], 0, 8, 1200)
                animateValue(spans[1], 0, 23, 1200)
                animateValue(spans[2], 0, 20, 1200)
                
                isAnimationLoaded = true;
            } 
        }
    });

    function animateValue(obj, start, end, duration) {
        const INTERVAL_TIME = 10;
        if (duration < 100) {
            duration = 100;
        } else if (duration > 10000) {
            duration = 10000;
        }

        let decimals = (end % 1 != 0) ? (end.toString().split('.')[1] || '').length : 0;
                
        if (end === start) {
            obj.innerHTML = start.toFixed(decimals);
            return;
        }
                
        const stepTime = Math.ceil(duration / INTERVAL_TIME);
        let doneLoops = 0;

        let quantityPerLoop = end / stepTime;

        let increment = (end - start) / stepTime;
        let current = start;

        const INTERVAL = setInterval(function () {
            current += quantityPerLoop;
            obj.innerHTML = current.toFixed(decimals);
            if ((increment > 0 && current >= end) || (increment < 0 && current <= end)) {
                clearInterval(INTERVAL);
                obj.innerHTML = parseFloat(end).toFixed(decimals);
            }
        }, INTERVAL_TIME);

        isAnimationLoaded = true;
    }    
</script>
